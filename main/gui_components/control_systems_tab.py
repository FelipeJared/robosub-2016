import Tkinter
import callback_functions
import previous_state_logging_system
import callback_functions as genericCF


def displaySelectedFrame(window):
    
    optionSelected = window.dropBoxPID.get()
    
    if optionSelected == "Joystick":
        window.controlSystemLabelFrame.grid()
        window.autonomousFrame.grid_remove()
        window.lockedFrame.grid_remove()
        window.joystickFrame.grid()
    elif optionSelected == "Autonomous":
        window.controlSystemLabelFrame.grid()
        window.lockedFrame.grid_remove()
        window.joystickFrame.grid_remove()
        window.autonomousFrame.grid()
    elif optionSelected == "Locked":
        window.controlSystemLabelFrame.grid()
        window.autonomousFrame.grid_remove()
        window.joystickFrame.grid_remove()
        window.lockedFrame.grid()
        


def makeControlSystemsTab(window, notebook, screenRes):
    
    controlSystemsTab = Tkinter.Frame(notebook, width=1000, height=200)
    controlSystemsTab.place()
    notebook.add(controlSystemsTab, text="Control Systems")
        
    controlSystemsOptionsFrame = Tkinter.Frame(controlSystemsTab)
    controlSystemsOptionsFrame.grid(row = 0, column = 0)


    controlSystemLabelFrame = Tkinter.Frame(controlSystemsTab)
    controlSystemLabelFrame.grid(row = 0, column = 1)
    
    controlSystemsLabel = []
    controlSystemsLabel.append(Tkinter.Label(controlSystemsOptionsFrame, text = "PID Options", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[0].grid(row=0, column=0)    
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "Kp", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[1].grid(row=2, column=1, pady=25)
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "Ki", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[2].grid(row=3, column=1, pady=15)
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "Kd", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[3].grid(row=4, column=1, pady=10)
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "dControllerTime", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[4].grid(row=5, column=1, pady=10)
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "integratorMin", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[5].grid(row=6, column=1, pady=10)
    controlSystemsLabel.append(Tkinter.Label(controlSystemLabelFrame, text = "integratorMax", font=("kDefaultFont", int(round(screenRes[0]/160.667)))))
    controlSystemsLabel[6].grid(row=7, column=1, pady=10)

        
    dropBoxPID = Tkinter.StringVar(controlSystemsOptionsFrame)
    dropBoxPID.set("") # default value
    optionMenuPID = Tkinter.OptionMenu(controlSystemsOptionsFrame, dropBoxPID, "Joystick", "Autonomous", "Locked")
    optionMenuPID.grid(row=1, column=0, sticky="W")
    optionMenuPID.bind("<Button-1>", lambda event, args=[window]: genericCF.Refresh(event, args)) #This is to stop the gui from flickering
        
    joystickFrame = Tkinter.Frame(controlSystemsTab)
    joystickFrame.grid(row = 0, column = 2)
    autonomousFrame = Tkinter.Frame(controlSystemsTab)
    autonomousFrame.grid(row = 0, column = 2)
    lockedFrame = Tkinter.Frame(controlSystemsTab)
    lockedFrame.grid(row = 0, column = 2)
        
    pidScales = []
    pidNames = []
        
    pidNames.append(Tkinter.Label(joystickFrame, text = "Yaw Controller Forward Mode", font=("TkDefaultFont", int(round(screenRes[0]/180.667)))))
    pidNames[0].grid(row = 2, column = 1, sticky="N",padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[0].grid(row = 3, column = 1,sticky="N", padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[1].grid(row = 4, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[2].grid(row = 5, column = 1,sticky="N", padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[3].grid(row = 6, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[4].grid(row = 7, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[5].grid(row = 8, column = 1,sticky="N", padx = int(screenRes[0]/318))
        
    pidNames.append(Tkinter.Label(joystickFrame, text = "Pitch Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[1].grid(row = 2, column = 2, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[6].grid(row = 3, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[7].grid(row = 4, column = 2,sticky="N", padx = int(screenRes[0]/318))      
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[8].grid(row = 5, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[9].grid(row = 6, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[10].grid(row = 7, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[11].grid(row = 8, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    
    pidNames.append(Tkinter.Label(joystickFrame, text = "Roll Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[2].grid(row = 2, column = 3, sticky="N",padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[12].grid(row = 3, column = 3,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[13].grid(row = 4, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[14].grid(row = 5, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[15].grid(row = 6, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[16].grid(row = 7, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[17].grid(row = 8, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    
    pidNames.append(Tkinter.Label(joystickFrame, text = "Depth Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[3].grid(row = 2, column = 4, sticky="N",padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[18].grid(row = 3, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[19].grid(row = 4, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[20].grid(row = 5, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[21].grid(row = 6, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[22].grid(row = 7, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(joystickFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[23].grid(row = 8, column = 4,sticky="N", padx = int(screenRes[0]/318))
    
    
    '''
    Autonomous PID controllers
    '''
    pidNames.append(Tkinter.Label(autonomousFrame, text = "Yaw Controller Forward Mode", font=("TkDefaultFont", int(round(screenRes[0]/180.667)))))
    pidNames[4].grid(row = 2, column = 1, sticky="N",padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[24].grid(row = 3, column = 1,sticky="N", padx = int(screenRes[0]/318))         
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[25].grid(row = 4, column = 1,sticky="N", padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[26].grid(row = 5, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[27].grid(row = 6, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[28].grid(row = 7, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[29].grid(row = 8, column = 1,sticky="N", padx = int(screenRes[0]/318))
    
    pidNames.append(Tkinter.Label(autonomousFrame, text = "Yaw Controller Backward Mode", font=("TkDefaultFont", int(round(screenRes[0]/180.667)))))
    pidNames[5].grid(row = 2, column = 2, sticky="N",padx = int(screenRes[0]/318))    
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[30].grid(row = 3, column = 2,sticky="N", padx = int(screenRes[0]/318))          
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[31].grid(row = 4, column = 2,sticky="N", padx = int(screenRes[0]/318))  
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[32].grid(row = 5, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[33].grid(row = 6, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[34].grid(row = 7, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[35].grid(row = 8, column = 2,sticky="N", padx = int(screenRes[0]/318))
  
    pidNames.append(Tkinter.Label(autonomousFrame, text = "Pitch Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[6].grid(row = 2, column = 3, sticky="N",padx = int(screenRes[0]/318))    
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[36].grid(row = 3, column = 3,sticky="N", padx = int(screenRes[0]/318))            
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[37].grid(row = 4, column = 3,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[38].grid(row = 5, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[39].grid(row = 6, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[40].grid(row = 7, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[41].grid(row = 8, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    
    pidNames.append(Tkinter.Label(autonomousFrame, text = "Roll Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[7].grid(row = 2, column = 4, sticky="N",padx = int(screenRes[0]/318))  
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[42].grid(row = 3, column = 4,sticky="N", padx = int(screenRes[0]/318))          
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[43].grid(row = 4, column = 4,sticky="N", padx = int(screenRes[0]/318))      
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[44].grid(row = 5, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[45].grid(row = 6, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[46].grid(row = 7, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[47].grid(row = 8, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
   
    pidNames.append(Tkinter.Label(autonomousFrame, text = "Depth Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[8].grid(row = 2, column = 5, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[48].grid(row = 3, column = 5,sticky="N", padx = int(screenRes[0]/318))           
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[49].grid(row = 4, column = 5,sticky="N", padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[50].grid(row = 5, column = 5,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[51].grid(row = 6, column = 5,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[52].grid(row = 7, column = 5,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[53].grid(row = 8, column = 5,sticky="N", padx = int(screenRes[0]/318))  
    
    pidNames.append(Tkinter.Label(autonomousFrame, text = "xPID Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[9].grid(row = 2, column = 6, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[54].grid(row = 3, column = 6,sticky="N", padx = int(screenRes[0]/318))        
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[55].grid(row = 4, column = 6,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[56].grid(row = 5, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[57].grid(row = 6, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[58].grid(row = 7, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[59].grid(row = 8, column = 6,sticky="N", padx = int(screenRes[0]/318)) 

    pidNames.append(Tkinter.Label(autonomousFrame, text = "zPID Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[10].grid(row = 2, column = 7, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[60].grid(row = 3, column = 7,sticky="N", padx = int(screenRes[0]/318))          
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[61].grid(row = 4, column = 7,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[62].grid(row = 5, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[63].grid(row = 6, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[64].grid(row = 7, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(autonomousFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[65].grid(row = 8, column = 7,sticky="N", padx = int(screenRes[0]/318))         
    
    '''
    Locked PID Controllers
    '''
    pidNames.append(Tkinter.Label(lockedFrame, text = "Yaw Controller Forward Mode", font=("TkDefaultFont", int(round(screenRes[0]/180.667)))))
    pidNames[11].grid(row = 2, column = 1, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[66].grid(row = 3, column = 1,sticky="N", padx = int(screenRes[0]/318))          
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[67].grid(row = 4, column = 1,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[68].grid(row = 5, column = 1,sticky="N", padx = int(screenRes[0]/318))    
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[69].grid(row = 6, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[70].grid(row = 7, column = 1,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[71].grid(row = 8, column = 1,sticky="N", padx = int(screenRes[0]/318))
    
    pidNames.append(Tkinter.Label(lockedFrame, text = "Yaw Controller Backward Mode", font=("TkDefaultFont", int(round(screenRes[0]/180.667)))))
    pidNames[12].grid(row = 2, column = 2, sticky="N",padx = int(screenRes[0]/318))  
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[72].grid(row = 3, column = 2,sticky="N", padx = int(screenRes[0]/318))         
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[73].grid(row = 4, column = 2,sticky="N", padx = int(screenRes[0]/318))      
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[74].grid(row = 5, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[75].grid(row = 6, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[76].grid(row = 7, column = 2,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[77].grid(row = 8, column = 2,sticky="N", padx = int(screenRes[0]/318))
   
    pidNames.append(Tkinter.Label(lockedFrame, text = "Pitch Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[13].grid(row = 2, column = 3, sticky="N",padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[78].grid(row = 3, column = 3,sticky="N", padx = int(screenRes[0]/318))         
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[79].grid(row = 4, column = 3,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[80].grid(row = 5, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[81].grid(row = 6, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[82].grid(row = 7, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[83].grid(row = 8, column = 3,sticky="N", padx = int(screenRes[0]/318)) 
        
    pidNames.append(Tkinter.Label(lockedFrame, text = "Roll Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[14].grid(row = 2, column = 4, sticky="N",padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[84].grid(row = 3, column = 4,sticky="N", padx = int(screenRes[0]/318))           
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[85].grid(row = 4, column = 4,sticky="N", padx = int(screenRes[0]/318))       
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[86].grid(row = 5, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[87].grid(row = 6, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[88].grid(row = 7, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[89].grid(row = 8, column = 4,sticky="N", padx = int(screenRes[0]/318)) 
    
    pidNames.append(Tkinter.Label(lockedFrame, text = "Depth Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[15].grid(row = 2, column = 5, sticky="N",padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[90].grid(row = 3, column = 5,sticky="N", padx = int(screenRes[0]/318))       
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[91].grid(row = 4, column = 5,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[92].grid(row = 5, column = 5,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[93].grid(row = 6, column = 5,sticky="N", padx = int(screenRes[0]/318))    
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[94].grid(row = 7, column = 5,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[95].grid(row = 8, column = 5,sticky="N", padx = int(screenRes[0]/318))  

    pidNames.append(Tkinter.Label(lockedFrame, text = "xPID Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[16].grid(row = 2, column = 6, sticky="N",padx = int(screenRes[0]/318))
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[96].grid(row = 3, column = 6,sticky="N", padx = int(screenRes[0]/318))      
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[97].grid(row = 4, column = 6,sticky="N", padx = int(screenRes[0]/318))     
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[98].grid(row = 5, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[99].grid(row = 6, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[100].grid(row = 7, column = 6,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[101].grid(row = 8, column = 6,sticky="N", padx = int(screenRes[0]/318)) 

    pidNames.append(Tkinter.Label(lockedFrame, text = "zPID Controller", font=("TkDefaultFont", int(round(screenRes[0]/170.667)))))
    pidNames[17].grid(row = 2, column = 7, sticky="N",padx = int(screenRes[0]/318))  
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[102].grid(row = 3, column = 7,sticky="N", padx = int(screenRes[0]/318))    
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 5, resolution = 0.1, width = 15, orient = "horizontal"))
    pidScales[103].grid(row = 4, column = 7,sticky="N", padx = int(screenRes[0]/318))   
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[104].grid(row = 5, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 1, resolution = 0.01, width = 15, orient = "horizontal"))
    pidScales[105].grid(row = 6, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[106].grid(row = 7, column = 7,sticky="N", padx = int(screenRes[0]/318)) 
    pidScales.append(Tkinter.Scale(lockedFrame, from_ = 0, to = 40, resolution = 1, width = 15, orient = "horizontal"))
    pidScales[107].grid(row = 8, column = 7,sticky="N", padx = int(screenRes[0]/318))         
    
    setattr(window, "pidScales", pidScales)
    setattr(window, "controlSystemsLabel", controlSystemsLabel)
    setattr(window, "controlSystemLabelFrame", controlSystemLabelFrame)
    setattr(window, "controlSystemsOptionFrame", controlSystemsOptionsFrame)
    setattr(window, "optionMenuPID", optionMenuPID) 
    setattr(window, "dropBoxPID", dropBoxPID)
    setattr(window, "lockedFrame", lockedFrame)
    setattr(window, "autonomousFrame", autonomousFrame)
    setattr(window, "joystickFrame", joystickFrame)

    window.controlSystemLabelFrame.grid_remove()
    window.lockedFrame.grid_remove()
    window.autonomousFrame.grid_remove()
    window.joystickFrame.grid_remove()
    
            
        
        